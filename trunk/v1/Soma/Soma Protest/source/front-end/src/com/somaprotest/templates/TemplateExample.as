package com.somaprotest.templates {		import flash.events.Event;		import com.soma.Soma;		import com.soma.view.SomaText;		import com.soma.view.Page;		import com.soma.view.Template;		import com.soma.interfaces.IRemovable;		import com.soma.interfaces.ITemplateable;		import com.soma.events.LoaderEvent;		import com.soma.vo.LoaderItemVO;		import com.soma.tween.SomaTween;		import com.soundstep.ui.ElementUI;		import com.somaprotest.Config;		import com.somaprotest.pages.core.Margin;		import flash.display.DisplayObjectContainer;		import flash.display.Sprite;		import flash.display.DisplayObject;		import com.hydrotik.utils.QueueLoaderEvent;	
	/**	 * <b>Author:</b> Romuald Quantin - <a href="http://www.soundstep.com/" target="_blank">www.soundstep.com</a><br />	 * <b>Company:</b> Less Rain - <a href="http://www.lessrain.com/" target="_blank">www.lessrain.com</a><br />	 * <b>Class version:</b> 1.0<br />	 * <b>Actionscript version:</b> 3.0<br />	 * <b>Copyright:</b> 	 * <br />	 * <b>Date:</b> 6 Dec 2008<br />	 * <b>Usage:</b>	 * @example	 * <listing version="3.0"></listing>	 */		public class TemplateExample extends Template implements ITemplateable, IRemovable {		//------------------------------------		// private, protected properties		//------------------------------------				private var _margin:Margin;		private var _elements:Array;		//------------------------------------		// public properties		//------------------------------------								//------------------------------------		// constructor		//------------------------------------				public function TemplateExample(page:Page, containerTarget:DisplayObjectContainer) {			super(page, containerTarget);		}				//		// PRIVATE, PROTECTED		//________________________________________________________________________________________________				override protected function init():void {			super.init();			_margin = Config(Soma.getInstance().config).margin;			_elements = [];		}				override protected function startTemplate():void {			// title			var title:SomaText = new SomaText(elementList[0], "title");			title.x = _margin.left;			title.y = _margin.top;			containerTarget.addChild(title);			_elements.push(title);			// subtitle			var subtitle:SomaText = new SomaText(elementList[1], "title");			subtitle.x = _margin.left;			subtitle.y = title.y + title.height + 5;			containerTarget.addChild(subtitle);			_elements.push(subtitle);			// image			var image:Sprite = new Sprite();			containerTarget.addChild(image);			var lvo:LoaderItemVO = new LoaderItemVO(elementList[2].@path + elementList[2].@file, image, {title:elementList[2].@id, smoothing:true});			Soma.getInstance().loader.queue.addEventListener(QueueLoaderEvent.ITEM_COMPLETE, itemComplete, false, 0, true);			new LoaderEvent(LoaderEvent.ADD_ITEM, Soma.getInstance().loader, lvo).dispatch();			new LoaderEvent(LoaderEvent.START_LOADING, Soma.getInstance().loader).dispatch();			_elements.push(image);			// intro			var intro:SomaText = new SomaText(elementList[3], "body");			intro.width = 300;			intro.x = _margin.left;			intro.y = subtitle.y + subtitle.height + 5;			containerTarget.addChild(intro);			_elements.push(intro);			// hide			for each (var obj:DisplayObject in _elements) {				obj.alpha = 0;				obj.visible = false;			}		}				private function itemComplete(e:QueueLoaderEvent):void {			var image:Sprite = e.targ;			image.scaleX = image.scaleY = .5;			var el:ElementUI = page.baseUI.add(e.targ);			el.right = el.top = 20;			showTemplate();		}		override protected function showTemplate():void {			for (var i:int=0; i<_elements.length; i++) SomaTween.start(_elements[i], null, {time:1, _autoAlpha:1, delay:i*.5});			SomaTween.start(this, null, {time:0, delay:(i*.5), onComplete:endDisplay});		}		override protected function endDisplay():void {			super.endDisplay();		}				// PUBLIC		//________________________________________________________________________________________________				override public function start():void {			super.start();		}				override public function show():void {			super.show();		}				override public function remove(e:Event = null):void {			Soma.getInstance().loader.queue.removeEventListener(QueueLoaderEvent.ITEM_COMPLETE, itemComplete, false);			SomaTween.start(_elements, null, {time:.7, _autoAlpha:0, onComplete:dispose});		}				override public function dispose(e:Event = null):void {			super.dispose();		}
		
		public function get elements():Array {			return _elements;
		}	}}