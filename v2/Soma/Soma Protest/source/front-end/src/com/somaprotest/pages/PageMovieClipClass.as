package com.somaprotest.pages {	import com.soma.Soma;	import caurina.transitions.Tweener;	import com.soma.events.PageEvent;	import com.soma.interfaces.IPage;	import com.soma.view.Page;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	/**	 * <b>Author:</b> Romuald Quantin - <a href="http://www.soundstep.com/" target="_blank">www.soundstep.com</a><br />	 * <b>Company:</b> Less Rain - <a href="http://www.lessrain.com/" target="_blank">www.lessrain.com</a><br />	 * <b>Class version:</b> 1.0<br />	 * <b>Actionscript version:</b> 3.0<br />	 * <b>Copyright:</b> 	 * <br />	 * <b>Date:</b> 10 Feb 2009<br />	 * <b>Usage:</b>	 * @example	 * <listing version="3.0"></listing>	 */		public class PageMovieClipClass extends Page implements IPage {		//------------------------------------		// private, protected properties		//------------------------------------						//------------------------------------		// public properties		//------------------------------------				
		//------------------------------------		// constructor		//------------------------------------				public function PageMovieClipClass() {			alpha = 0;			visible = false;			addEventListener(PageEvent.INITIALIZED, createElements, false, 0, true);		}		//		// PRIVATE, PROTECTED		//________________________________________________________________________________________________				protected function createElements(e:PageEvent):void {			fillTextFields();		}				private function fillTextFields():void {			// syntax to access elements in the MovieClip (title and body TextField instance):			// you can write only "title" or "body" to access to the textField in the MovieClip			// I use the syntax with "this" to remove warnings in FDT			// you can also in the publish settings > flash > actionscript settings			// untick "Automatically declare stage instances" and add in this class:			// public var title:TextField;			// public var body:TextField;			var title:TextField = this['title'];			title.text = pageXML['title']; 			var body:TextField = this['body'];			body.styleSheet = Soma.getInstance().styles.getGlobalStyleSheet();			body.condenseWhite = true;			body.autoSize = TextFieldAutoSize.LEFT;			body.htmlText = content.*.(@id == "intro");
		}				// PUBLIC		//________________________________________________________________________________________________				override public function transitionIn():void {			Tweener.addTween(this, {time:.7, _autoAlpha:1, onComplete:super.transitionIn});		}				override public function transitionInComplete():void {			super.transitionInComplete();		}				override public function transitionOut():void {			Tweener.addTween(this, {time:.7, _autoAlpha:0, onComplete:super.transitionOut});		}			override public function transitionOutComplete():void {			removeEventListener(PageEvent.INITIALIZED, createElements, false);			while (numChildren > 0) {				removeChildAt(0);			}			super.transitionOutComplete();		}		}}