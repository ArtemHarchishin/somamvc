package com.soma.assets {	import flash.net.registerClassAlias;	import flash.utils.Dictionary;	import flash.utils.getDefinitionByName;		/**     * <p><b>Author:</b> Romuald Quantin - <a href="http://www.soundstep.com/" target="_blank">www.soundstep.com</a><br/>     * <p><b>Information:</b><br/>     * Blog page - <a href="http://www.soundstep.com/blog/downloads/somaui/" target="_blank">SomaUI</a><br/>     * How does it work - <a href="http://www.soundstep.com/somaprotest/" target="_blank">Soma Protest</a><br/>     * Project Host - <a href="http://code.google.com/p/somamvc/" target="_blank">Google Code</a><br/>     * Documentation - <a href="http://www.soundstep.com/blog/source/somaui/docs/" target="_blank">Soma ASDOC</a><br/>     * <b>Class version:</b> 2.0<br/>     * <b>Actionscript version:</b> 3.0</p>     * <p><b>Copyright:</b></p>     * <p>The contents of this file are subject to the Mozilla Public License<br />     * Version 1.1 (the "License"); you may not use this file except in compliance<br />     * with the License. You may obtain a copy of the License at<br /></p>     *      * <p><a href="http://www.mozilla.org/MPL/" target="_blank">http://www.mozilla.org/MPL/</a><br /></p>     *      * <p>Software distributed under the License is distributed on an "AS IS" basis,<br />     * WITHOUT WARRANTY OF ANY KIND, either express or implied.<br />     * See the License for the specific language governing rights and<br />     * limitations under the License.<br /></p>     *      * <p>The Original Code is Soma.<br />     * The Initial Developer of the Original Code is Romuald Quantin.<br />     * Initial Developer are Copyright (C) 2008-2009 Soundstep. All Rights Reserved.</p>     *      * <p><b>Usage:</b><br/>     * Classes that don't have an explicit reference in the code are not imported by the compiler.<br/>     * The ClassImport class allow you to register a class and force its import. It is useful for classes instantiated from a String, such as the page classes (type attribute in a page of the XML Site definition), loading classes and menu classes.<br/>  	 * A global ClassImport instance is created in Soma and accessed through 2 methods getClass and registerClass.	 * <listing version="3.0">	 * Soma.getInstance().registerClass(MyClass);	 * trace(Soma.getInstance().getClass("MyClass"));	 * </listing>     * </p>     */		public class ClassImport {		//------------------------------------		// private, protected properties		//------------------------------------				// Dictionary containing the classes to be force-imported.		private var _classes:Dictionary; 		//------------------------------------		// public properties		//------------------------------------								//------------------------------------		// constructor		//------------------------------------				/** Creates a ClassImport instance. */		public function ClassImport() {			init();		}				//		// PRIVATE, PROTECTED		//________________________________________________________________________________________________				private function init():void {			_classes = new Dictionary();		}		// PUBLIC		//________________________________________________________________________________________________				/**		 * Register a class to force its import in the compiler and be able to create instance from a String (getDefinitionByName).		 * @param value Class to import		 */		public function register(value:Class):String {			var alias:String = String(value).substring(7, String(value).length-1);			if (_classes[alias] == undefined) {				_classes[alias] = value;				registerClassAlias(alias, value);			}			return alias;		}				/**		 * Get a Class imported from its name.		 * @param className String of the name of the Class.		 * @return a Class.		 */		public function getClass(className:String):Class {			try {				if (_classes[className] != undefined) return _classes[className];				else return getDefinitionByName(className) as Class;			}			catch (e:Error) {				trace(e);			}			return null;		}			}}